local base = require("ui_base")
local UI = class("debug", base)

----------------UI配置------------------
function UI:GET_AB()
    return "ui"
end
function UI:GET_DEFAULT_OPTS()
    return {order = 999, blockInput = false, blackMask = 0}
end
----------------UI配置------------------

function UI:awake()
    self.isShow = false

    self.contentNode = comp:getCSComponent(self.node:Find("contentNode"), UE.RectTransform)
    self.width = comp:getCSComponent(self.node:Find("contentNode"):Find("bgImage"), UE.RectTransform).sizeDelta.x
    print(self.width)
end
function UI:onDestroy()
end
function UI:show()
    print("show")
    self.isShow = true

    self.contentNode.offsetMin = {x = -self.width, y = self.contentNode.offsetMin.y}
    self.contentNode.offsetMax = {x = -self.width, y = self.contentNode.offsetMax.y}
end
function UI:hide()
    print("hide")
    self.isShow = false

    self.contentNode.offsetMin = {x = 0, y = self.contentNode.offsetMin.y}
    self.contentNode.offsetMax = {x = 0, y = self.contentNode.offsetMax.y}
end
function UI:onBtnClick()
    if (not self.isShow) then
        self:show()
    else
        self:hide()
    end
end
function UI:onTestBtnClick()
    print("临时测试")

    -- local time = UE.Time.time
    -- self:load_sprite("card1", "1")
    -- print("time>>>", UE.Time.time - time)

    local time = UE.Time.time
    self:load_sprite_asyn(
        "card1",
        "1",
        function(sp)
            print(sp)
            print("time>>>", UE.Time.time - time)
        end
    )

    -- for i = 1, 10 do
    --     local node = GameObject.Instantiate(self:load_gameObject("prefab1", "card_avatar_item")).transform
    --     node.parent = ui.uiCanvas
    --     node.localPosition = {x = 0, y = ui.uiCanvas.childCount * 160, z = 0}
    --     node.localScale = {x = 1, y = 1, z = 1}
    --     local c =
    --         comp:addComponent(
    --         node,
    --         "card_avatar_item",
    --         {
    --             info = player.cardMap[1],
    --             onClick = function(o)
    --                 print("123")
    --             end
    --         }
    --     )
    -- end
end
function UI:onDebugViewBtnClick()
    print("开关控制台视图")
    local comp = comp:getCSComponent(mono.monoNode, TestConsole) or comp:addCSComponent(mono.monoNode, TestConsole)
    if (not comp.visible) then
        comp:Show()
    else
        comp:Hide()
    end
end
function UI:onLogoutBtnClick()
    print("注销")
    gameLogic.reelectUser()
end
function UI:onReelectPlayerBtnClick()
    print("重选角色")
    gameLogic.reelectPlayer()
end
function UI:onRefreshLayoutBtnClick()
    GAME_CONFIG.SCREEN_SCALE =
        (UE.Screen.width / UE.Screen.height) / (GAME_CONFIG.DEFAULT_SCREEN.WIDTH / GAME_CONFIG.DEFAULT_SCREEN.HEIGHT)
    print("视图重适应", GAME_CONFIG.SCREEN_SCALE)
end
return UI
