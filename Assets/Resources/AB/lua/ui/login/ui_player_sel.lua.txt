local base = require("ui_base")
local UI = class("player_sel", base)

----------------UI配置------------------
function UI:GET_AB()
    return "ui1"
end
function UI:GET_DEFAULT_OPTS()
    return {blockInput = false, blackMask = 0}
end
----------------UI配置------------------

function UI:onLoad()
    self.contentNode = self.uiComp.ScrollRect.ScrollView.transform:Find("Viewport"):Find("Content")

    self:refresh()
end

function UI:refresh()
    for i = 0, self.contentNode.childCount - 1 do
        GameObject.Destroy(self.contentNode:GetChild(i).gameObject)
    end

    for index, info in ipairs(GameData.players) do
        self:addSelPlayerItem(info)
    end

    if #GameData.players < GAME_CONFIG.MAX_PLAYER_SUM then
        self:addSelPlayerItem(nil)
    end
end
function UI:addSelPlayerItem(info)
    local node = GameObject.Instantiate(self:load_gameObject("prefab1", "selplayer_item")).transform
    node.parent = self.contentNode
    node.localPosition = {x = 0, y = 0, z = 0}
    node.localScale = {x = 1, y = 1, z = 1}
    local c =
        comp:addComponent(
        node,
        "selplayer_item",
        {
            info = info,
            onClick = function(c)
                self:onItemBtnClick(c)
            end
        }
    )
    return c
end
function UI:onItemBtnClick(c)
    if c.info == nil then
        -- 创建人物界面
        ui:showUI("ui_player_create")
        self:close()
    else
        if self.lastSelComp ~= nil then
            self.lastSelComp:hideOutLine()
        end
        self.lastSelComp = c
        self.lastSelComp:showOutLine()
    end
end
function UI:onNextBtnClick(o, order)
    -- 进入游戏

    if self.lastSelComp == nil or self.lastSelComp.info == nil then
        ui:showTip({msg = "请点击选择上方列表中的人物"})
        return
    end

    local pid = self.lastSelComp.info.pid
    http:send(
        "enterGame",
        {pid = pid},
        function(data)
            network:conn(
                data.url,
                {token = data.token},
                function()
                    _G.player = require("model_player"):new(pid)
                    network:emit(
                        "enterGame",
                        {},
                        function()
                            self:close()
                        end
                    )
                end
            )
        end
    )
end
function UI:onDelBtnClick(o, order)
    -- 删除人物
    if self.lastSelComp == nil or self.lastSelComp.info == nil then
        ui:showTip({msg = "请点击选择上方列表中的人物"})
        return
    end
    local pid = self.lastSelComp.info.pid
    ui:showUI(
        "ui_input_affirm",
        {
            affirmStr = "确认删除",
            onAffirm = function()
                -- 删除人物
                http:send(
                    "delPlayer",
                    {pid = pid},
                    function(data)
                        --删除人物列表
                        for index, info in ipairs(GameData.players) do
                            if info.pid == data.pid then
                                table.remove(GameData.players, index)
                            end
                        end
                        self.lastSelComp = nil
                        self:refresh()
                    end
                )
            end
        }
    )
end
function UI:onBackBtnClick(o, order)
    ui:showUI("ui_area_main")
    self:close()
end
return UI
