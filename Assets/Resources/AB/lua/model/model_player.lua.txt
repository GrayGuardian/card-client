local base = require("model_base")
local Model = class("player", base)

local PlayerCurrency = require("model_player_currency")
local PlayerStyle = require("model_player_style")
local Card = require("model_card")
local SkillGem = require("model_skillgem")

function Model:CLASS_NAME()
    return "Player"
end
function Model:onLoad()
    print("[Model] init>>>>", self:CLASS_NAME(), self.idx, self.baseInfo)
    self.currency = nil
    self.cardMap = {}
    self.skillGemMap = {}

    print(
        "添加Plyaer监听事件",
        self:broadcast_on(
            BROADCAST_CODE.SOCKET_EVENT("upModelData"),
            function(data)
                -- print("[Player]", "接收到ModelData>>>", data.clsName)
                local baseInfo = data[data.clsName]
                -- 人物货币
                if data.clsName == "PlayerCurrency" then
                    if (self.currency == nil and data.idx == self.idx) then
                        self.currency = PlayerCurrency:new(self.idx, baseInfo)
                    end
                end
                -- 卡牌
                if data.clsName == "Card" then
                    if (self.cardMap[data.idx] == nil) then
                        self.cardMap[data.idx] = Card:new(data.idx, baseInfo)
                    end
                end
                -- 技能宝石
                if data.clsName == "SkillGem" then
                    if (self.skillGemMap[data.idx] == nil) then
                        self.skillGemMap[data.idx] = SkillGem:new(data.idx, baseInfo)
                    end
                end
            end
        )
    )
end
function Model:onDestroy()
    self.currency:close()
    for key, card in pairs(self.cardMap) do
        card:close()
    end
    for key, skillgem in pairs(self.skillGemMap) do
        skillgem:close()
    end
end

-- 获得下级所需经验
function Model:getNextLvExp(lv)
    lv = lv or self:get_lv()
    local exp = 30 * (Mathf.Pow(lv, 3) + lv * 5) - 80
    return exp
end

return Model
